<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>免费开源的GitHub访问加速项目，GitHub520</title>
      <link href="/2024/11/19/GitHub520/"/>
      <url>/2024/11/19/GitHub520/</url>
      
        <content type="html"><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/521xueweihan/GitHub520">GitHub520</a></p><h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h2><p>对 GitHub 说”爱”太难了：访问慢、图片加载不出来。</p><p><strong>本项目无需安装任何程序，仅需 5 分钟。</strong></p><p>通过修改本地 hosts 文件，试图解决：</p><ul><li>GitHub 访问速度慢的问题</li><li>GitHub 项目中的图片显示不出的问题</li></ul><h2 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h2><p>下面的地址无需访问 GitHub 即可获取到最新的 hosts 内容：</p><ul><li>文件：<code>https://raw.hellogithub.com/hosts</code></li><li>JSON：<code>https://raw.hellogithub.com/hosts.json</code></li></ul><h3 id="2-1-手动方式"><a href="#2-1-手动方式" class="headerlink" title="2.1 手动方式"></a>2.1 手动方式</h3><h4 id="2-1-1-复制下面的内容"><a href="#2-1-1-复制下面的内容" class="headerlink" title="2.1.1 复制下面的内容"></a>2.1.1 复制下面的内容</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">该内容会自动定时更新， 数据更新时间：2024-11-20T10:30:41+08:00</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 2.1.2 修改 hosts 文件</span></span><br><span class="line"></span><br><span class="line">hosts 文件在每个系统的位置不一，详情如下：</span><br><span class="line"></span><br><span class="line">- Windows 系统：`C:\Windows\System32\drivers\etc\hosts`</span><br><span class="line">- Linux 系统：`/etc/hosts`</span><br><span class="line">- Mac（苹果电脑）系统：`/etc/hosts`</span><br><span class="line">- Android（安卓）系统：`/system/etc/hosts`</span><br><span class="line">- iPhone（iOS）系统：`/etc/hosts`</span><br><span class="line"></span><br><span class="line">修改方法，把第一步的内容复制到文本末尾：</span><br><span class="line"></span><br><span class="line">1. Windows 使用记事本。</span><br><span class="line">2. Linux、Mac 使用 Root 权限：`<span class="built_in">sudo</span> vi /etc/hosts`。</span><br><span class="line">3. iPhone、iPad 须越狱、Android 必须要 root。</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 2.1.3 激活生效</span></span><br><span class="line"></span><br><span class="line">大部分情况下是直接生效，如未生效可尝试下面的办法，刷新 DNS：</span><br><span class="line"></span><br><span class="line">1. Windows：在 CMD 窗口输入：`ipconfig /flushdns`</span><br><span class="line">2. Linux 命令：`<span class="built_in">sudo</span> nscd restart`，如报错则须安装：`<span class="built_in">sudo</span> apt install nscd` 或 `<span class="built_in">sudo</span> /etc/init.d/nscd restart`</span><br><span class="line">3. Mac 命令：`<span class="built_in">sudo</span> killall -HUP mDNSResponder`</span><br><span class="line"></span><br><span class="line">**Tips：** 上述方法无效可以尝试重启机器。</span><br><span class="line"></span><br><span class="line"><span class="comment">### 2.2 自动方式（SwitchHosts）</span></span><br><span class="line"></span><br><span class="line">**Tip**：推荐 [SwitchHosts](https://github.com/oldj/SwitchHosts) 工具管理 hosts</span><br><span class="line"></span><br><span class="line">以 SwitchHosts 为例，看一下怎么使用的，配置参考下面：</span><br><span class="line"></span><br><span class="line">- Hosts 类型: `Remote`</span><br><span class="line">- Hosts 标题: 随意</span><br><span class="line">- URL: `https://raw.hellogithub.com/hosts`</span><br><span class="line">- 自动刷新: 最好选 `1 小时`</span><br><span class="line"></span><br><span class="line">如图：</span><br><span class="line"></span><br><span class="line">![](./img/switch-hosts.png)</span><br><span class="line"></span><br><span class="line">这样每次 hosts 有更新都能及时进行更新，免去手动更新。</span><br><span class="line"></span><br><span class="line"><span class="comment">### 2.3 一行命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### Windows</span></span><br><span class="line"></span><br><span class="line">使用命令需要安装[git bash](https://gitforwindows.org/)</span><br><span class="line">复制以下命令保存到本地命名为**fetch_github_hosts**</span><br><span class="line"></span><br><span class="line">```shell</span><br></pre></td></tr></table></figure><p>在<strong>CMD</strong>中执行以下命令，执行前需要替换<strong>git-bash.exe</strong>和<strong>fetch_github_hosts</strong>为你本地的路径，注意前者为windows路径格式后者为shell路径格式</p><p><code>&quot;C:\Program Files\Git\git-bash.exe&quot; -c &quot;/c/Users/XXX/fetch_github_hosts&quot;</code></p><p>可以将上述命令添加到windows的task schedular（任务计划程序）中以定时执行</p><h4 id="GNU（Ubuntu-CentOS-Fedora）"><a href="#GNU（Ubuntu-CentOS-Fedora）" class="headerlink" title="GNU（Ubuntu&#x2F;CentOS&#x2F;Fedora）"></a>GNU（Ubuntu&#x2F;CentOS&#x2F;Fedora）</h4><p><code>sudo sh -c &#39;sed -i &quot;/# GitHub520 Host Start/Q&quot; /etc/hosts &amp;&amp; curl https://raw.hellogithub.com/hosts &gt;&gt; /etc/hosts&#39;</code></p><h4 id="BSD-macOS"><a href="#BSD-macOS" class="headerlink" title="BSD&#x2F;macOS"></a>BSD&#x2F;macOS</h4><p><code>sudo sed -i &quot;&quot; &quot;/# GitHub520 Host Start/,/# Github520 Host End/d&quot; /etc/hosts &amp;&amp; curl https://raw.hellogithub.com/hosts | sudo tee -a /etc/hosts</code></p><p>将上面的命令添加到 cron，可定时执行。使用前确保 GitHub520 内容在该文件最后部分。</p><p><strong>在 Docker 中运行，若遇到 <code>Device or resource busy</code> 错误，可使用以下命令执行</strong></p><p><code>cp /etc/hosts ~/hosts.new &amp;&amp; sed -i &quot;/# GitHub520 Host Start/Q&quot; ~/hosts.new &amp;&amp; curl https://raw.hellogithub.com/hosts &gt;&gt; ~/hosts.new &amp;&amp; cp -f ~/hosts.new /etc/hosts</code></p><h3 id="2-4-AdGuard-用户（自动方式）"><a href="#2-4-AdGuard-用户（自动方式）" class="headerlink" title="2.4 AdGuard 用户（自动方式）"></a>2.4 AdGuard 用户（自动方式）</h3><p>在 <strong>过滤器&gt;DNS 封锁清单&gt;添加阻止列表&gt;添加一个自定义列表</strong>，配置如下：</p><ul><li>名称：随意</li><li>URL：<code>https://raw.hellogithub.com/hosts</code>（和上面 SwitchHosts 使用的一样）</li></ul><p>如图：</p><p><img src="/./img/AdGuard-rules.png"></p><p>更新间隔在 <strong>设置 &gt; 常规设置 &gt; 过滤器更新间隔（设置一小时一次即可）</strong>，记得勾选上 <strong>使用过滤器和 Hosts 文件以拦截指定域名</strong></p><p><img src="/./img/AdGuard-rules2.png"></p><p><strong>Tip</strong>：不要添加在 <strong>DNS 允许清单</strong> 内，只能添加在 <strong>DNS 封锁清单</strong> 才管用。 另外，AdGuard for Mac、AdGuard for Windows、AdGuard for Android、AdGuard for IOS 等等 <strong>AdGuard 家族软件</strong> 添加方法均类似。</p><h2 id="三、效果对比"><a href="#三、效果对比" class="headerlink" title="三、效果对比"></a>三、效果对比</h2><p>之前的样子：</p><p><img src="/./img/old.png"></p><p>修改完 hosts 的样子：</p><p><img src="/./img/new.png"></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><input checked="" disabled="" type="checkbox"> 定时自动更新 hosts 内容</li><li><input checked="" disabled="" type="checkbox"> hosts 内容无变动不会更新</li><li><input checked="" disabled="" type="checkbox"> 寻到最优 IP 解析结果</li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width: 0" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> hosts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费GPT4资源</title>
      <link href="/2024/11/19/aikey/"/>
      <url>/2024/11/19/aikey/</url>
      
        <content type="html"><![CDATA[<h1 id="免费-ChatGPT-API-平台推荐"><a href="#免费-ChatGPT-API-平台推荐" class="headerlink" title="免费 ChatGPT API 平台推荐"></a><strong>免费 ChatGPT API 平台推荐</strong></h1><p>为 AI 爱好者、开发者和研究人员提供公益免费 API 服务，支持多种模型，轻松上手，快速体验。</p><hr><h2 id="免费-FREE-CHATGPT-API介绍"><a href="#免费-FREE-CHATGPT-API介绍" class="headerlink" title="免费 FREE-CHATGPT-API介绍"></a><strong>免费 FREE-CHATGPT-API介绍</strong></h2><p>本项目提供完全免费的 ChatGPT API，旨在支持非商业用途的学习、研究与测试。所有用户需遵守 OpenAI 的使用政策与法律法规，禁止任何非法使用。<br>⚠️ <strong>重要提醒</strong>：根据《生成式人工智能服务管理暂行办法》，禁止向中国地区公众提供未经备案的生成式人工智能服务。</p><h3 id="支持的模型"><a href="#支持的模型" class="headerlink" title="支持的模型"></a><strong>支持的模型</strong></h3><p>免费用户可访问以下模型：</p><ul><li><strong>gpt-4o-mini</strong>（免费用户速度有限制）</li><li><strong>gpt-3.5-turbo-0125</strong></li><li><strong>gpt-3.5-turbo-1106</strong></li><li><strong>gpt-3.5-turbo</strong></li><li><strong>gpt-3.5-turbo-16k</strong></li><li><strong>net-gpt-3.5-turbo</strong>（支持联网搜索，稳定性稍差）</li><li><strong>whisper-1</strong></li><li><strong>dall-e-2</strong></li></ul><hr><h3 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a><strong>功能特点</strong></h3><ol><li><strong>标准接口格式</strong>：完全兼容 OpenAI 官方 API。</li><li><strong>流式响应支持</strong>：提升用户体验。</li><li><strong>多平台适配</strong>：兼容多种开源 GPT 项目与应用。</li><li><strong>国内优化线路</strong>：无需科学上网即可快速访问。</li></ol><hr><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a><strong>使用说明</strong></h3><h4 id="1-获取免费-API-KEY"><a href="#1-获取免费-API-KEY" class="headerlink" title="1. 获取免费 API KEY"></a><strong>1. 获取免费 API KEY</strong></h4><p>点击 <a href="#">链接</a> 前往领取，登录 GitHub 授权即可获取免费 API KEY。</p><h4 id="2-配置与调用"><a href="#2-配置与调用" class="headerlink" title="2. 配置与调用"></a><strong>2. 配置与调用</strong></h4><ul><li><strong>设置 API KEY</strong>：将获取的 KEY 配置为应用的 <code>OPENAI_API_KEY</code>。</li><li>**接口地址 (BaseUrl)**：<ul><li><code>https://free.v36.cm</code></li><li>或 <code>https://free.v36.cm/v1</code></li></ul></li></ul><hr><h3 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a><strong>使用限制</strong></h3><h4 id="调用限制"><a href="#调用限制" class="headerlink" title="调用限制"></a><strong>调用限制</strong></h4><ul><li><strong>gpt-4</strong>：每天最多调用 <strong>3 次</strong>。</li><li><strong>gpt-4o-mini</strong> 和 <strong>gpt-3.5-turbo</strong>：每天共享 <strong>200 次调用限制</strong>。</li><li>每个 API KEY 和 IP 的每日调用总数不得超过 200 次，GPT 与 Embedding 请求分别计算。</li></ul><h4 id="禁止事项"><a href="#禁止事项" class="headerlink" title="禁止事项"></a><strong>禁止事项</strong></h4><ul><li><strong>商业用途</strong>：仅限个人学习与科研使用。</li><li><strong>滥用 API KEY</strong>：如发现滥用，API 将被封禁。</li><li><strong>模型训练</strong>：禁止将 API 用于大规模模型训练或商用项目。</li></ul><h2 id="GPT-API-free"><a href="#GPT-API-free" class="headerlink" title="GPT_API_free"></a>GPT_API_free</h2><h3 id="GPT-API-free-免费-ChatGPT-API-项目介绍"><a href="#GPT-API-free-免费-ChatGPT-API-项目介绍" class="headerlink" title="GPT_API_free 免费 ChatGPT API 项目介绍"></a><strong>GPT_API_free 免费 ChatGPT API 项目介绍</strong></h3><h4 id="支持功能："><a href="#支持功能：" class="headerlink" title="支持功能："></a><strong>支持功能</strong>：</h4><ol><li>支持 <strong>Models</strong>、<strong>Embedding</strong>、<strong>GPT-3.5-Turbo</strong>、<strong>gpt-4o-mini</strong>。</li><li>免费版支持：<ul><li><strong>gpt-4</strong>：每天 3 次使用限制。</li><li><strong>gpt-4o-mini</strong> 和 <strong>gpt-3.5-turbo</strong>：每天共享 200 次调用限制。</li></ul></li><li>完全兼容官方接口标准，适配各种软件和插件。</li><li>支持流式响应。</li><li>国内线路动态加速，体验优于代理连接官方。</li><li>无需科学上网，国内环境即可直接使用。</li><li>免费提供个人使用。</li></ol><h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a><strong>注意事项</strong>：</h4><ul><li><strong>免费 API Key 仅限个人非商业用途</strong>，如教育或非营利性科研工作。</li><li>禁止商用或大规模训练商用模型；科研模型训练需提前加群联系。</li><li>滥用 Key 将被封禁。</li><li>每天调用限制为：<ul><li><strong>200 次&#x2F;天&#x2F;IP &amp; Key</strong>，分开计算 GPT 和 Embedding 请求。</li><li>如果一个 IP 下使用多个 Key，则总请求数不能超过 200。</li><li>如果一个 Key 在多个 IP 上使用，该 Key 的总请求数同样不能超过 200。</li></ul></li></ul><h3 id="GPT-API-free-获取与使用方法"><a href="#GPT-API-free-获取与使用方法" class="headerlink" title="GPT_API_free 获取与使用方法"></a><strong>GPT_API_free 获取与使用方法</strong></h3><ol><li><p><strong>领取免费 API KEY</strong><br>点击 <a href="#">链接</a> 前往领取，登录 GitHub 账号授权后即可获取 API KEY。</p></li><li><p><strong>使用 API KEY</strong></p><ul><li>设置 API 接口地址：<ul><li><strong>Host1</strong>: <code>https://api.chatanywhere.tech</code>（国内中转，延时更低）</li><li><strong>Host2</strong>: <code>https://api.chatanywhere.org</code></li></ul></li><li>将 API KEY 和接口地址填入应用，即可调用 ChatGPT 功能。</li></ul></li></ol><hr><h2 id="OpenRouter-平台"><a href="#OpenRouter-平台" class="headerlink" title="OpenRouter 平台"></a><strong>OpenRouter 平台</strong></h2><p>另推荐 <strong>OpenRouter</strong>，提供统一接口访问多种 AI 模型，支持按需付费与免费试用，适合个人和开发者。</p><h3 id="平台特点"><a href="#平台特点" class="headerlink" title="平台特点"></a><strong>平台特点</strong></h3><ol><li><strong>多模型支持</strong>：包括商业和开源模型（如 GPT-4、Claude v2 等）。</li><li><strong>灵活收费</strong>：按使用量计费，并提供免费试用额度。</li><li><strong>简单易用</strong>：统一接口，方便切换模型。</li><li><strong>国内优化线路</strong>：低延迟，快速访问。</li></ol><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a><strong>使用方法</strong></h3><ol><li><strong>注册账户</strong>：获取 API 密钥。</li><li><strong>调用接口</strong>：根据需求选择模型并进行调用。</li><li><strong>参考文档</strong>：快速了解平台功能并解决技术问题。</li></ol><hr><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a><strong>常见问题</strong></h3><h4 id="1-谁适合使用？"><a href="#1-谁适合使用？" class="headerlink" title="1. 谁适合使用？"></a><strong>1. 谁适合使用？</strong></h4><p>AI 开发者、数据科学家及普通用户均可轻松上手。</p><h4 id="2-技术门槛高吗？"><a href="#2-技术门槛高吗？" class="headerlink" title="2. 技术门槛高吗？"></a><strong>2. 技术门槛高吗？</strong></h4><p>只需基础编程能力，文档对初学者十分友好。</p><h4 id="3-免费额度用完怎么办？"><a href="#3-免费额度用完怎么办？" class="headerlink" title="3. 免费额度用完怎么办？"></a><strong>3. 免费额度用完怎么办？</strong></h4><p>按需选择付费套餐，性价比高，支持灵活扩展。</p><h4 id="4-平台是否安全？"><a href="#4-平台是否安全？" class="headerlink" title="4. 平台是否安全？"></a><strong>4. 平台是否安全？</strong></h4><p>提供全面安全保障，用户需妥善管理 API 密钥。</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>免费 ChatGPT API 平台与 OpenRouter 提供了丰富的功能和资源，无论是个人探索还是开发应用，均是值得尝试的工具。<br>点击链接注册，快速开启 AI 体验吧！ 🚀</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
          <category> 白嫖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> GPT </tag>
            
            <tag> API Key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gmeek博客一键搭搭建教程</title>
      <link href="/2024/11/18/3/"/>
      <url>/2024/11/18/3/</url>
      
        <content type="html"><![CDATA[<h1 id="项目地址https-github-com-Meekdai-Gmeek"><a href="#项目地址https-github-com-Meekdai-Gmeek" class="headerlink" title="项目地址https://github.com/Meekdai/Gmeek"></a>项目地址<a href="https://github.com/Meekdai/Gmeek">https://github.com/Meekdai/Gmeek</a></h1><h1 id="博客原文地址Gmeek博客一键搭搭建教程"><a href="#博客原文地址Gmeek博客一键搭搭建教程" class="headerlink" title="博客原文地址Gmeek博客一键搭搭建教程"></a>博客原文地址<a href="https://blog.wwzs.fun/tutorial/2.html">Gmeek博客一键搭搭建教程</a></h1><h1 id="Gmeek-搭建教程"><a href="#Gmeek-搭建教程" class="headerlink" title="Gmeek 搭建教程"></a>Gmeek 搭建教程</h1><p>Gmeek 是一个超轻量级的个人博客框架，完全基于 GitHub Pages、GitHub Issues 和 GitHub Actions 构建。无需本地部署，从搭建到写作仅需 <strong>18 秒</strong> 和 <strong>两步</strong>，而 <strong>第三步</strong> 就可以开始写作。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gmeek 旨在为个人博客提供一个简洁、高效的解决方案。借助 GitHub 的强大功能，你无需担心服务器配置和维护，只需简单几步即可完成博客的搭建与管理。Gmeek 利用了 GitHub Pages 进行静态页面托管，GitHub Issues 作为博客文章的创作平台，GitHub Actions 自动化部署流程，使整个流程自动化、无缝衔接。</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li><strong>与 GitHub 同源的 UI 界面</strong>：采用 GitHub 原生 CSS<a href="https://primer.style/css">primer.style</a>，界面风格与 GitHub 无缝衔接。</li><li><strong>自动化部署</strong>：在 Issues 中完成博客写作后，自动触发 GitHub Actions 执行部署任务。</li><li><strong>评论系统</strong>：集成 <a href="https://utteranc.es/">utteranc.es</a> 作为评论系统，轻量且易于使用。</li><li><strong>可自定义主题</strong>：使用 Jinja2 对 HTML 进行渲染，支持通过模板自定义 UI 主题。</li><li><strong>无需本地部署</strong>：所有操作均在 GitHub 上完成，简化部署流程。</li></ul><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><ul><li>官方 <a href="http://meekdai.github.io/">Demo页面</a></li><li>我建立的<a href="https://wanwuzhishi.github.io/">https://wanwuzhishi.github.io/</a></li></ul><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>按照以下步骤，可以在 <strong>两步，18 秒</strong>  内完成 Gmeek 博客的搭建。</p><h3 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1. 创建仓库"></a>1. 创建仓库</h3><ol><li>**<a href="https://github.com/new?template_name=Gmeek-template&template_owner=Meekdai">通过模板创建仓库</a>**：</li></ol><p>    - 点击<a href="https://github.com/new?template_name=Gmeek-template&template_owner=Meekdai">通过模板创建仓库</a></p><ol start="2"><li><strong>命名仓库</strong>：</li></ol><p>    - 推荐将仓库命名为 <code>YOUR_GITHUB_USERNAME.github.io</code>，其中 <code>YOUR_GITHUB_USERNAME</code> 为你的 GitHub 用户名。</p><p>    - 示例：如果你的 GitHub 用户名为 <code>wanwuzhishi</code>，则仓库名称应为 <code>wanwuzhishi.github.io</code>。</p><p>    <img src="https://tu.126330.xyz/file/1729410432618_Clip_2024-10-20_15-46-41.png" alt="image"></p><ol start="3"><li><strong>完成仓库创建</strong>：</li></ol><p>    - 点击 <code>Create repository</code>  完成仓库的创建。</p><h3 id="2-启用-GitHub-Pages"><a href="#2-启用-GitHub-Pages" class="headerlink" title="2. 启用 GitHub Pages"></a>2. 启用 GitHub Pages</h3><ol><li><strong>进入仓库设置</strong>：</li></ol><p>    - 在新创建的仓库页面，点击上方的 <code>Settings</code> 标签。</p><ol start="2"><li><strong>配置 Pages</strong>：</li></ol><p>    - 在左侧菜单中，找到并点击 <code>Pages</code>。</p><p>    - 在 <code>Build and deployment</code> 部分，设置 <code>Source</code> 为 <code>GitHub Actions</code>。</p><ol start="3"><li><strong>保存设置</strong>：</li></ol><p>    - 确认设置后，页面会自动保存，并显示部署状态。</p><h3 id="3-开始写作"><a href="#3-开始写作" class="headerlink" title="3. 开始写作"></a>3. 开始写作</h3><ol><li><strong>创建 Issue 文章</strong>：</li></ol><p>    - 进入仓库的 <code>Issues</code> 页面，点击 <code>New issue</code> 创建一篇新的文章。</p><ol start="2"><li><strong>添加标签</strong>：</li></ol><p>    - 在创建 Issue 时，至少添加一个 <code>Label</code>（标签），例如 <code>blog</code>。</p><ol start="3"><li><strong>保存 Issue</strong>：</li></ol><p>    - 完成内容撰写后，点击 <code>Submit new issue</code> 提交。</p><ol start="4"><li><strong>自动生成博客内容</strong>：</li></ol><p>    - 提交 Issue 后，GitHub Actions 会自动触发构建流程。</p><p>    - 片刻后，你的博客内容将生成并部署到 <code>https://YOUR_GITHUB_USERNAME.github.io</code>。</p><ol start="5"><li><strong>查看构建进度</strong>：</li></ol><p>    - 可进入 <code>Actions</code> 页面查看构建的详细进度和日志。</p><h3 id="4-手动全局生成"><a href="#4-手动全局生成" class="headerlink" title="4. 手动全局生成"></a>4. 手动全局生成</h3><p>在以下情况下，需要手动全局生成博客内容：</p><ul><li>修改了 <code>config.json</code> 文件。</li><li>出现了构建或显示上的奇怪问题。</li></ul><p><strong>操作步骤</strong>：</p><ol><li><strong>进入 Actions 页面</strong>：</li></ol><p>    - 在仓库页面，点击上方的 <code>Actions</code> 标签。</p><ol start="2"><li><strong>找到 Build Gmeek 工作流</strong>：</li></ol><p>    - 在左侧工作流列表中，选择 <code>build Gmeek</code>。</p><ol start="3"><li><strong>运行工作流</strong>：</li></ol><p>    - 点击 <code>Run workflow</code> 按钮，手动触发一次全局重新生成。</p><h2 id="提交问题"><a href="#提交问题" class="headerlink" title="提交问题"></a>提交问题</h2><p>如果在搭建或使用过程中遇到问题，可以参考以下步骤提交问题：</p><ol><li><strong>参考快速上手</strong>：</li></ol><p>    - 检查是否按照快速上手中的步骤正确操作。</p><ol start="2"><li><strong>手动全局生成</strong>：</li></ol><p>    - 在提交问题之前，先手动全局生成一次，确保问题不在配置文件或构建流程中。</p><ol start="3"><li><strong>提交 Issue</strong>：</li></ol><p>    - 如果问题依旧存在，进入仓库的 <code>Issues</code> 页面，点击 <code>New issue</code> 提交你的问题描述。</p><p>    - 提供尽可能详细的信息，例如错误日志、截图等，以便更快定位问题。</p><ol start="4"><li><strong>协助解决</strong>：</li></ol><p>    - 提交后，项目维护者会协助查看构建流程，帮助定位和解决问题。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Gmeek 为个人博客的创建和管理提供了一个简洁、快捷且高效的解决方案。通过利用 GitHub 的强大功能，用户无需担心复杂的部署流程，只需专注于内容创作即可。如果你正在寻找一个轻量级且易于维护的博客框架，Gmeek 无疑是一个值得尝试的选择。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 博客 </tag>
            
            <tag> blog </tag>
            
            <tag> Gmeek </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器的类别</title>
      <link href="/2024/11/18/ceui/"/>
      <url>/2024/11/18/ceui/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器类型指南"><a href="#服务器类型指南" class="headerlink" title="服务器类型指南"></a>服务器类型指南</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在互联网高速发展的今天，服务器作为网站、应用程序和各类在线服务的核心，选择合适的服务器类型对业务稳定性和服务质量尤为关键。本指南将全面介绍独立服务器、虚拟服务器（VPS）、NAT虚拟服务器（NAT-VPS）、云服务器、托管服务器、共享主机以及LXC共享内核VPS的特点，以帮助您根据实际需求和预算找到最优的解决方案。</p><hr><h2 id="1-独立服务器"><a href="#1-独立服务器" class="headerlink" title="1. 独立服务器"></a>1. 独立服务器</h2><p>独立服务器（也称“母鸡”或“独服”）是一整台物理服务器，所有资源专属，不与他人共享。</p><ul><li><p><strong>优点</strong></p><ul><li>性能强大：拥有独占的计算资源，处理能力强劲。</li><li>高安全性：无多租户模式带来的安全隐患，适合隔离性要求高的业务。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>成本高：月租在300元以上，性能更高的达千元。</li><li>维护复杂：需用户具备较高的技术能力。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>高并发业务、需要独占资源的应用、对安全性要求高的企业服务等。</li></ul></li></ul><h2 id="2-虚拟服务器-VPS"><a href="#2-虚拟服务器-VPS" class="headerlink" title="2. 虚拟服务器 (VPS)"></a>2. 虚拟服务器 (VPS)</h2><p>VPS通过虚拟化技术，将一台物理服务器分割成多个虚拟服务器，提供灵活的资源配置。</p><ul><li><p><strong>优点</strong></p><ul><li>灵活配置：可按需选择CPU、内存和存储，适合多种需求。</li><li>经济实惠：相比独立服务器，价格较低，适合中小型项目。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>容易受宿主机故障影响：宿主机出现故障时，所有VPS都会受影响。</li><li>超售风险：部分服务商可能超售资源或受恶意用户影响性能。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>中小型网站、电商平台、个人博客等需要适度隔离性且灵活的资源配置。</li></ul></li></ul><h2 id="3-NAT虚拟服务器-NAT-VPS"><a href="#3-NAT虚拟服务器-NAT-VPS" class="headerlink" title="3. NAT虚拟服务器 (NAT-VPS)"></a>3. NAT虚拟服务器 (NAT-VPS)</h2><p>NAT-VPS通过共享IP提供外网访问，成本低，适合IP资源需求少的用户。</p><ul><li><p><strong>优点</strong></p><ul><li>成本低：共享IP节省独立IP的开销。</li><li>基础应用足够：适合轻量级应用和测试环境。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>安全风险：同IP用户行为可能影响其他用户。</li><li>端口限制：只能通过固定端口访问，不适合复杂网络应用。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>低成本小型应用、轻量API服务、测试开发环境等。</li></ul></li></ul><h2 id="4-云服务器"><a href="#4-云服务器" class="headerlink" title="4. 云服务器"></a>4. 云服务器</h2><p>云服务器基于云计算的虚拟化资源，支持快速弹性扩展，通常由大型云服务商提供。</p><ul><li><p><strong>优点</strong></p><ul><li>弹性伸缩：资源按需扩展，适应业务增长。</li><li>高可用性：数据多地备份，故障容忍性强。</li><li>按需付费：根据使用量付费，便于成本控制。</li><li>便捷管理：云平台提供简化管理界面。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>数据隐私：敏感数据存储在第三方数据中心。</li><li>网络依赖：网络状况不佳时影响服务。</li><li>长期成本高：长期使用成本可能高于物理服务器。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>需要灵活扩展性、临时性应用和大规模计算的项目，如电商促销、在线会议等。</li></ul></li></ul><h2 id="5-托管服务器"><a href="#5-托管服务器" class="headerlink" title="5. 托管服务器"></a>5. 托管服务器</h2><p>托管服务器是客户自购硬件放置在服务商的数据中心，由服务商提供基础设施支持。</p><ul><li><p><strong>优点</strong></p><ul><li>完全控制：用户可自选硬件和软件。</li><li>专业支持：数据中心提供稳定的电力和网络环境。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>初始投资高：需自行购买服务器硬件。</li><li>自行维护：用户负责系统维护和故障排查。</li><li>升级难度高：硬件升级相对复杂。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>特殊硬件需求的应用、希望自主选择硬件和系统的高安全性应用。</li></ul></li></ul><h2 id="6-共享主机"><a href="#6-共享主机" class="headerlink" title="6. 共享主机"></a>6. 共享主机</h2><p>共享主机是多个用户共享同一台物理服务器的资源，适合小型网站和个人博客。</p><ul><li><p><strong>优点</strong></p><ul><li>成本低：价格低廉，适合预算紧张的项目。</li><li>易于操作：通常配有控制面板，用户友好。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>性能受限：受其他用户负载影响大。</li><li>安全性较低：共享服务器存在多用户安全隐患。</li><li>资源不足：适合轻量应用，不适合高流量业务。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>小型个人网站、个人博客、低访问量的展示类网站等。</li></ul></li></ul><h2 id="7-LXC共享内核VPS"><a href="#7-LXC共享内核VPS" class="headerlink" title="7. LXC共享内核VPS"></a>7. LXC共享内核VPS</h2><p>LXC（Linux Containers）是一种轻量级虚拟化技术，允许多个容器共享同一主机内核，常用于高密度VPS部署。</p><ul><li><p><strong>优点</strong></p><ul><li>资源效率高：直接使用宿主机内核，资源消耗更少。</li><li>启动速度快：无需加载独立内核，启动时间短。</li><li>管理简便：适合批量创建轻量VPS，成本低。</li><li>低开销：节省内存和CPU资源，适合轻量应用。</li><li>高效文件系统共享：减少数据冗余。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>内核共享安全风险：容器共享内核，隔离性不如KVM。</li><li>无法自定义内核：无法更改内核参数，适用性受限。</li><li>兼容性问题：部分应用需完全隔离或特定内核模块。</li><li>隔离性较低：宿主机负载波动影响容器性能。</li><li>缺少硬件仿真：不适合需底层硬件仿真的应用。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>对内核隔离性要求不高、轻量级、资源敏感的应用，如Web服务器、测试环境、小型数据库等。</li></ul></li></ul><h2 id="8-专用虚拟服务器-VDS"><a href="#8-专用虚拟服务器-VDS" class="headerlink" title="8.专用虚拟服务器 (VDS)"></a>8.专用虚拟服务器 (VDS)</h2><p>专用虚拟服务器（VDS）类似于VPS，但每个VDS拥有更大的资源份额和更高的性能保障，通常不会发生资源超售情况。</p><ul><li><p><strong>优点</strong> - 性能较高：资源不会被超售，性能更稳定。</p><ul><li>安全性更好：资源隔离性比普通VPS更高。</li><li>高级配置：适合中等规模或高需求项目。</li></ul></li><li><p><strong>缺点</strong></p><ul><li>成本较高：相比传统VPS，价格更高。</li><li>资源锁定：无法动态扩展资源，灵活性不如云服务器。</li></ul></li><li><p><strong>适用场景</strong></p><ul><li>需要高稳定性和性能的中等规模应用、资源负载较高的项目等。</li></ul></li></ul><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>选择合适的服务器类型需综合考虑项目规模、性能需求、预算和技术能力。独立服务器适合高资源和安全要求业务，VPS适合中小型项目，云服务器支持高扩展性和便捷管理，托管服务器适合特定硬件需求，共享主机适合低预算项目，LXC VPS则适合轻量应用和资源敏感场景。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站用户DK13378对《昭和米国物语》的评价</title>
      <link href="/2024/11/18/2/"/>
      <url>/2024/11/18/2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://space.bilibili.com/1058086295">DK13378的个人空间-DK13378个人主页-哔哩哔哩视频</a></p><h1 id="这游戏就是把80，90年代日美输入的文化消化之后拉给他们看"><a href="#这游戏就是把80，90年代日美输入的文化消化之后拉给他们看" class="headerlink" title="这游戏就是把80，90年代日美输入的文化消化之后拉给他们看"></a>这游戏就是把80，90年代日美输入的文化消化之后拉给他们看</h1><p><img src="https://tu.126330.xyz/file/1730557633399_20241102222704.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 日常生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硅云新人免费一年顶级域名注册教程</title>
      <link href="/2024/11/18/1/"/>
      <url>/2024/11/18/1/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>💡硅云提供的一年免费顶级域名注册需要实名认证</strong></p><h1 id="一，注册硅云账号"><a href="#一，注册硅云账号" class="headerlink" title="一，注册硅云账号"></a>一，注册硅云账号</h1><h2 id="1-点击硅云"><a href="#1-点击硅云" class="headerlink" title="1.点击硅云"></a>1.点击<a href="https://www.vpsor.cn/?userCode=jh27ed6">硅云</a></h2><h2 id="2-点击注册"><a href="#2-点击注册" class="headerlink" title="2.点击注册"></a>2.点击注册</h2><p><img src="https://tu.126330.xyz/file/1730560594172_20241102231623.png" alt="image.png"></p><h2 id="3-按提示输入"><a href="#3-按提示输入" class="headerlink" title="3.按提示输入"></a>3.按提示输入</h2><p>用户名： 联系邮箱：（官方推荐使用国内邮箱） 密码：</p><p><img src="https://tu.126330.xyz/file/1730560622018_20241102231650.png" alt="image.png"></p><h1 id="二，实名"><a href="#二，实名" class="headerlink" title="二，实名"></a>二，实名</h1><h2 id="1-注册成功并登录后点击用户中心，实名认证"><a href="#1-注册成功并登录后点击用户中心，实名认证" class="headerlink" title="1.注册成功并登录后点击用户中心，实名认证"></a>1.注册成功并登录后点击用户中心，实名认证</h2><p><img src="https://tu.126330.xyz/file/1730560697037_20241102231810.png" alt="image.png"></p><p><img src="https://tu.126330.xyz/file/1730560713323_20241102231824.png" alt="image.png"></p><h2 id="2-实名之后按下图找到域名模板，点击添加新模板"><a href="#2-实名之后按下图找到域名模板，点击添加新模板" class="headerlink" title="2.实名之后按下图找到域名模板，点击添加新模板"></a>2.实名之后按下图找到域名模板，点击添加新模板</h2><p><img src="https://tu.126330.xyz/file/1730560733233_20241102231845.png"></p><aside> 💡<p>注意：域名注册提交的英文信息根据上文自动填写，注意看一眼对不对</p></aside><p><img src="https://tu.126330.xyz/file/1730560784076_20241102231938.png" alt="image.png"></p><p>保存后等几十分钟，工作日一般不超2小时，实名通过后进行下一步</p><h1 id="三，注册域名"><a href="#三，注册域名" class="headerlink" title="三，注册域名"></a>三，注册域名</h1><h2 id="1-实名后点击此链接，之后在搜索框里输入你想要的域名，然后点击查域名"><a href="#1-实名后点击此链接，之后在搜索框里输入你想要的域名，然后点击查域名" class="headerlink" title="1.实名后点击此链接，之后在搜索框里输入你想要的域名，然后点击查域名"></a>1.实名后点击<a href="https://www.vpsor.cn/product/domain-buy?userCode=jh27ed6">此链接</a>，之后在搜索框里输入你想要的域名，然后点击查域名</h2><p><img src="https://tu.126330.xyz/file/1730560878837_20241102232110.png" alt="image.png"></p><h2 id="2-在结果中自行选择想要的域名，点击立即注册"><a href="#2-在结果中自行选择想要的域名，点击立即注册" class="headerlink" title="2.在结果中自行选择想要的域名，点击立即注册"></a>2.在结果中自行选择想要的域名，点击立即注册</h2><p><img src="https://tu.126330.xyz/file/1730560847895_20241102232036.png" alt="image.png"></p><h2 id="3-设置域名信息模板为你已经审核通过的模版"><a href="#3-设置域名信息模板为你已经审核通过的模版" class="headerlink" title="3.设置域名信息模板为你已经审核通过的模版"></a>3.设置域名信息模板为你已经审核通过的模版</h2><p><img src="https://tu.126330.xyz/file/1730560906634_20241102232142.png" alt="image.png"></p><p><img src="https://tu.126330.xyz/file/1730560928506_20241102232156.png" alt="image.png"></p><h2 id="4-同意协议后提交订单"><a href="#4-同意协议后提交订单" class="headerlink" title="4.同意协议后提交订单"></a>4.同意协议后提交订单</h2><p><img src="https://tu.126330.xyz/file/1730560937258_20241102232212.png" alt="image.png"></p><blockquote><p>提交订单后如下图登入域名管理，你也可以自由的将域名托管到其他DNS服务商</p></blockquote><p><img src="https://tu.126330.xyz/file/1730560951184_20241102232227.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 白嫖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Cloudreve自建了一个网盘，欢迎使用</title>
      <link href="/2024/11/13/10/"/>
      <url>/2024/11/13/10/</url>
      
        <content type="html"><![CDATA[<h1 id="万物之时云盘"><a href="#万物之时云盘" class="headerlink" title="万物之时云盘"></a><a href="https://pan.126330.xyz/">万物之时云盘</a></h1><p>存储策略是OneDrive，<br>E5还有81天，已经连续1年多了，不过建议如果要用的话不要储存重要数据，指不定啥时候就寄了,寄之前会通知<br><img src="https://tu.126330.xyz/file/1731555618233_.png" alt="图"><br>每人1T空间，但懂得都懂，都是虚的，支持webdav，支持直链。本人学生一枚，没啥钱提供离线下载服务，就不支持了，</p><h1 id="注意不要上传隐私内容，虽然我承诺不看，但是只有不上传才是最保险的"><a href="#注意不要上传隐私内容，虽然我承诺不看，但是只有不上传才是最保险的" class="headerlink" title="注意不要上传隐私内容，虽然我承诺不看，但是只有不上传才是最保险的"></a>注意不要上传隐私内容，虽然我承诺不看，但是只有不上传才是最保险的</h1>]]></content>
      
      
      <categories>
          
          <category> 白嫖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> Cloudreve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows11专业版KMS命令激活</title>
      <link href="/2024/11/04/05/"/>
      <url>/2024/11/04/05/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-激活方法"><a href="#Windows-激活方法" class="headerlink" title="Windows 激活方法"></a>Windows 激活方法</h1><ol><li><p><strong>打开终端</strong><br>右键点击<strong>开始</strong>图标，选择<strong>Windows 终端（管理员）</strong>。</p></li><li><p><strong>输入激活命令</strong><br>在终端中逐条输入以下命令，按 <strong>Enter</strong> 键执行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slmgr -ipk 7Y64F-88DCY-Y6WTC-H33D2-64QHF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slmgr -skms kms.0t.net.cn</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slmgr -ato</span><br></pre></td></tr></table></figure></li><li><p><strong>确认激活状态</strong><br>执行完最后一条命令后，您应该会看到“激活成功”的提示。</p></li></ol><blockquote><p>通过以上步骤，您应该已经成功激活了 Windows 系统。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10 Win11系统版本一键切换</title>
      <link href="/2024/11/03/04/"/>
      <url>/2024/11/03/04/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows版本切换工具"><a href="#Windows版本切换工具" class="headerlink" title="Windows版本切换工具"></a>Windows版本切换工具</h2><h3 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h3><p>目前支持 Windows 10 和 Windows 11 的所有版本系统切换，包括：</p><ul><li>专业版</li><li>企业版</li><li>家庭版</li><li>教育版</li><li>G企业版</li></ul><p>该工具支持批量切换版本，大大节约了运维时间。整个切换过程无需联网，且支持静默模式切换。</p><h3 id="界面展示"><a href="#界面展示" class="headerlink" title="界面展示"></a>界面展示</h3><p><img src="https://tu.126330.xyz/file/1730703845173_20241104150401.png" alt="切换界面1"><br><img src="https://tu.126330.xyz/file/1730703856326_20241104150411.png" alt="切换界面2"></p><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul><li><p><a href="https://ossq.cn/switching.html">官方网站地址</a><br><img src="https://tu.126330.xyz/file/1730703601723_Clip_2024-11-04_14-56-41.png" alt="官方网站截图"></p></li><li><p><a href="https://wwqk.lanzouq.com/izHgF29lguba">官方蓝奏云下载链接</a></p></li><li><p><a href="https://www.123684.com/s/obUuVv-zfWLh">123云盘下载链接</a></p></li><li><p><a href="https://pan.7so.top/f/5936C6/%E4%B8%80%E9%94%AE%E8%BD%AC%E6%8D%A27.0.zip">直链下载</a></p></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>使用此工具，可以轻松实现不同版本之间的切换，提升工作效率，适合IT运维人员和企业用户。</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPS定时重放脚本框架，零成本，无需服务器，无需部署</title>
      <link href="/2024/10/30/07/"/>
      <url>/2024/10/30/07/</url>
      
        <content type="html"><![CDATA[<h1 id="项目地址GitHub"><a href="#项目地址GitHub" class="headerlink" title="项目地址GitHub"></a>项目地址<a href="https://github.com/imoki/sign_script">GitHub</a></h1><h1 id="教程地址默库"><a href="#教程地址默库" class="headerlink" title="教程地址默库"></a>教程地址<a href="https://moku.us.kg/">默库</a></h1><h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><h2 id="聚合脚本（polymerization）"><a href="#聚合脚本（polymerization）" class="headerlink" title="聚合脚本（polymerization）"></a>聚合脚本（polymerization）</h2><p>文件夹“polymerization”内的所有脚本统称为聚合脚本，运行UPDATE.js即可自动生成表格及配置内容。<br>兼容青龙脚本，可直接在青龙内下运行  </p><h3 id="聚合脚本优势"><a href="#聚合脚本优势" class="headerlink" title="聚合脚本优势"></a>聚合脚本优势</h3><p><strong>金山文档</strong></p><ul><li>所有脚本及配置表格汇集在一个文档中，利于统一管理和配置</li><li>方便后续更新脚本，仅需运行UPDATE脚本即可自动新增最新表格及配置，不再需要手动新建表格框架</li><li>方便定时任务的添加与查看</li><li>支持仅推送错误消息、推送昵称等，支持更多的推送方式</li><li>配置灵活快捷，利于新增脚本及新配置功能</li><li>支持多脚本共用同一个表格，如WPS(轻量版)、WPS(客户端版)、WPS(稻壳版)脚本共用名称为wps的表格。<br><strong>青龙</strong>  </li><li>ql开头的脚本也可以直接在青龙中运行</li></ul><h2 id="金山文档建议"><a href="#金山文档建议" class="headerlink" title="金山文档建议"></a>金山文档建议</h2><ul><li>定时任务不设在同一时间</li></ul><h2 id="🧾-签到列表"><a href="#🧾-签到列表" class="headerlink" title="🧾 签到列表"></a>🧾 签到列表</h2><p>🟢: 正常 🔴: 失效 🟡: 待测 🟤: 随缘</p><table><thead><tr><th align="center">状态</th><th align="center">终端</th><th align="center">名称</th><th align="center">脚本</th><th align="center">检查日期</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">百度贴吧</td><td align="center">tieba.js</td><td align="center">24-07-18</td><td align="center">签到、只能签6个左右</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">有道云笔记</td><td align="center">noteyoudao.js</td><td align="center">23-08-08</td><td align="center">签到、领取空间</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">什么值得买</td><td align="center">ql_smzdm.js</td><td align="center">24-06-20</td><td align="center">抽奖的碎银子，仅抽奖</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">在线工具</td><td align="center">ql_toollu.js</td><td align="center">24-06-20</td><td align="center">签到获取积分</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">叮咚买菜-叮咚鱼塘</td><td align="center">ddmy_ddyt.js</td><td align="center">24-06-23</td><td align="center">领积分、签到、喂饲料</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">AcFun</td><td align="center">ql_acfun.js</td><td align="center">24-07-18</td><td align="center">签到得香蕉</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">喜马拉雅</td><td align="center">ql_xmly.js</td><td align="center">24-06-20</td><td align="center">签到</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">希沃白板</td><td align="center">ql_easinote.js</td><td align="center">24-09-07</td><td align="center">签到得空间</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">小木虫</td><td align="center">ql_xmc.js</td><td align="center">24-08-04</td><td align="center">签到得金币</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">夸克网盘</td><td align="center">ql_quark.js</td><td align="center">24-09-07</td><td align="center">签到得空间</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">葫芦侠3楼</td><td align="center">huluxia.js</td><td align="center">24-06-20</td><td align="center">板块签到</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">中兴社区</td><td align="center">ql_ztebbs.js</td><td align="center">24-07-18</td><td align="center">签到,得经验和流星</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">小米商城</td><td align="center">ql_mi.js</td><td align="center">24-07-18</td><td align="center">签到,得米金</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">看雪论坛</td><td align="center">ql_kanxue.js</td><td align="center">24-06-20</td><td align="center">签到,得雪币</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">哔哩哔哩</td><td align="center">ql_bilibili.js</td><td align="center">24-06-20</td><td align="center">直播签到,得经验、辣条和银瓜子</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">vivo社区</td><td align="center">vivo.js</td><td align="center">24-06-24</td><td align="center">签到得积分,抽奖</td></tr><tr><td align="center">🟢️</td><td align="center">wx</td><td align="center">WPS(打卡版)</td><td align="center">ql_wps_daka.js</td><td align="center">24-09-07</td><td align="center">金山文档微信小程序报名和打卡，领取权益</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">阿里云盘(自动更新token版)</td><td align="center">aliyun.js</td><td align="center">24-06-20</td><td align="center">签到，领取奖励（已无法自动领奖励），领取备份奖励</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">宽带技术网</td><td align="center">chinadsl.js</td><td align="center">24-08-05</td><td align="center">签到得积分、做任务、领取猫粮</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">golo汽修大师</td><td align="center">ql_golo.js</td><td align="center">24-06-20</td><td align="center">签到得积分,自动更新token</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">中兴商城</td><td align="center">ztemall.js</td><td align="center">24-09-07</td><td align="center">签到、做任务,得积分</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">万能福利吧</td><td align="center">wnflb.js</td><td align="center">24-06-12</td><td align="center">签到,得积分</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">废文</td><td align="center">ql_fwxs.js</td><td align="center">24-08-15</td><td align="center">签到</td></tr><tr><td align="center">🟢️</td><td align="center">wx</td><td align="center">鸿星尔克</td><td align="center">ql_hxek.js</td><td align="center">24-09-07</td><td align="center">签到,得积分</td></tr><tr><td align="center">🟢️</td><td align="center">APP</td><td align="center">钉钉AI</td><td align="center">ql_ddai.js</td><td align="center">24-09-07</td><td align="center">签到,领算粒</td></tr><tr><td align="center">🟢️</td><td align="center">WEB</td><td align="center">科研通</td><td align="center">ql_kyt.js</td><td align="center">24-09-07</td><td align="center">签到,得积分</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 签到 </tag>
            
            <tag> 青龙面板 </tag>
            
            <tag> 金山文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>serv00搭halo</title>
      <link href="/2024/10/30/12/"/>
      <url>/2024/10/30/12/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤-1-注册账号"><a href="#步骤-1-注册账号" class="headerlink" title="步骤 1: 注册账号"></a>步骤 1: 注册账号</h3><p>在 <strong>[Serv00](<a href="https://www.serv00.com/offer/create_new_account">Serv00.com » Create an account</a>)</strong> 注册一个账号。</p><h3 id="步骤-2-部署准备"><a href="#步骤-2-部署准备" class="headerlink" title="步骤 2: 部署准备"></a>步骤 2: 部署准备</h3><ol><li><p>在 <strong>Panel</strong> 中的 <strong>Additional services</strong> 选项卡里，找到 <strong>Run your own applications</strong>，并设置为 <code>Enabled</code>。<br><img src="https://tu.126330.xyz/file/1730386179858_Clip_2024-10-31_22-49-02.png" alt="Clip_2024-10-31_22-49-02.png"></p></li><li><p>通过 <code>ssh</code> 连接到虚拟主机。</p></li></ol><p>serv00安装pm2：脚本来源<a href="https://linux.do/u/Saika">Saika</a><a href="https://blog.rappit.site/2024/01/27/serv00_logs/">博客</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -s &lt;https://raw.githubusercontent.com/k0baya/alist_repl/main/serv00/install-pm2.sh&gt;)</span><br></pre></td></tr></table></figure><h3 id="步骤-4-创建工作目录"><a href="#步骤-4-创建工作目录" class="headerlink" title="步骤 4: 创建工作目录"></a>步骤 4: 创建工作目录</h3><p>创建并进入工作目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> domains &amp;&amp; <span class="built_in">mkdir</span> halo &amp;&amp; <span class="built_in">cd</span> halo</span><br></pre></td></tr></table></figure><h3 id="步骤-5-下载-Halo-Jar-包"><a href="#步骤-5-下载-Halo-Jar-包" class="headerlink" title="步骤 5: 下载 Halo Jar 包"></a>步骤 5: 下载 Halo Jar 包</h3><p>下载编译好的 <strong>Jar</strong> 包（可选择本项目或官方版本）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/V-UwU/halo-PaaS/releases/download/v2.17.2/halo.jar</span><br></pre></td></tr></table></figure><h3 id="步骤-6-配置数据库和应用"><a href="#步骤-6-配置数据库和应用" class="headerlink" title="步骤 6: 配置数据库和应用"></a>步骤 6: 配置数据库和应用</h3><ol><li>在 <strong>Serv00</strong> 面板中新建一个 <strong>MySQL</strong> 数据库。</li><li>在 <code>halo</code> 目录中新建文件夹 <code>.halo</code> 并创建配置文件 <code>application.yaml</code>：</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="comment">#面板中放行的端口号</span></span><br><span class="line">  <span class="attr">compression:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">r2dbc:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">r2dbc:pool:mysql://数据库地址:3306/数据库名</span></span><br><span class="line">    <span class="attr">username:</span> <span class="comment">#数据库用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="comment">#数据库密码</span></span><br><span class="line"></span><br><span class="line"><span class="attr">halo:</span></span><br><span class="line">  <span class="attr">admin-path:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">cache:</span> <span class="string">level</span></span><br></pre></td></tr></table></figure><h3 id="步骤-7-创建启动脚本"><a href="#步骤-7-创建启动脚本" class="headerlink" title="步骤 7: 创建启动脚本"></a>步骤 7: 创建启动脚本</h3><p>在 <code>halo</code> 目录中创建 <code>run.sh</code> 文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> HALO_WORK_DIR=<span class="string">&quot;/home/用户名/domains/halo/.halo&quot;</span></span><br><span class="line"><span class="built_in">export</span> HALO_EXTERNAL_URL=<span class="string">&quot;https://你的域名&quot;</span></span><br><span class="line">java17 -server -Xms128m -Xmx256m -jar -Duser.timezone=Asia/Shanghai /home/用户名/domains/halo/halo.jar --spring.config.additional-location=/home/用户名/domains/halo/.halo/application.yaml</span><br></pre></td></tr></table></figure><h3 id="步骤-8-测试运行"><a href="#步骤-8-测试运行" class="headerlink" title="步骤 8: 测试运行"></a>步骤 8: 测试运行</h3><p>测试运行 Jar 包：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x run.sh &amp;&amp; ./run.sh</span><br></pre></td></tr></table></figure><p>如果运行正常，按 <code>Ctrl+C</code> 停止运行。</p><h3 id="步骤-9-使用-PM2-管理服务"><a href="#步骤-9-使用-PM2-管理服务" class="headerlink" title="步骤 9: 使用 PM2 管理服务"></a>步骤 9: 使用 PM2 管理服务</h3><p>通过 <strong>pm2</strong> 管理 Halo：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x run.sh &amp;&amp; pm2 start ./run.sh --name halo</span><br></pre></td></tr></table></figure><h3 id="步骤-10-设置自动重启"><a href="#步骤-10-设置自动重启" class="headerlink" title="步骤 10: 设置自动重启"></a>步骤 10: 设置自动重启</h3><ol><li>在 <strong>Panel</strong> 的 <strong>Cron jobs</strong> 选项卡中，选择 <strong>Add cron job</strong>。</li><li>配置：<ul><li><strong>Specify time</strong>：选择 <code>After reboot</code></li><li><strong>Form type</strong>：选择 <code>Advanced</code></li><li><strong>Command</strong>：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/你的用户名/.npm-global/bin/pm2 resurrect &gt;/dev/null 2&gt;&amp;1 &amp;&amp; /home/你的用户名/.npm-global/bin/pm2 restart all &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>保存 PM2 的当前任务列表快照：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pm2 save</span><br></pre></td></tr></table></figure><p>通过这些步骤即可完成 Halo 部署和自动重启设置。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> serv00 </tag>
            
            <tag> 建站 </tag>
            
            <tag> Halo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 Cloudflare Pages 和 Telegram的免费图床搭建教程</title>
      <link href="/2024/10/29/08/"/>
      <url>/2024/10/29/08/</url>
      
        <content type="html"><![CDATA[<h1 id="项目地址https-github-com-MarSeventh-CloudFlare-ImgBed"><a href="#项目地址https-github-com-MarSeventh-CloudFlare-ImgBed" class="headerlink" title="项目地址https://github.com/MarSeventh/CloudFlare-ImgBed"></a>项目地址<a href="https://github.com/MarSeventh/CloudFlare-ImgBed">https://github.com/MarSeventh/CloudFlare-ImgBed</a></h1><p> ‼️ <strong>本方案基于 Cloudflare Pages 和 Telegram （文件大小不超过20MB，过大图片会自动压缩）。</strong></p><h1 id="一，介绍"><a href="#一，介绍" class="headerlink" title="一，介绍"></a>一，介绍</h1><h2 id="1-开源"><a href="#1-开源" class="headerlink" title="1.开源"></a><strong>1.开源</strong></h2><ul><li>前端开源（可自行修改、打包使用）</li></ul><h2 id="2-炫酷的动效（"><a href="#2-炫酷的动效（" class="headerlink" title="2.炫酷的动效（"></a><strong>2.炫酷的动效（</strong></h2><ul><li>流畅丝滑的过渡动画~</li><li>上传文件实现呼吸灯效果</li></ul><h2 id="3-人性化上传"><a href="#3-人性化上传" class="headerlink" title="3.人性化上传"></a><strong>3.人性化上传</strong></h2><ul><li>支持绝大多数常见<strong>图片、视频、动图</strong>等</li><li>支持多种上传方式（<strong>拖拽点击、粘贴</strong>）</li><li>粘贴上传支持<strong>文件</strong>和<strong>URL</strong></li><li>支持批量上传（不限同时选择文件数量，但为了保证稳定性，同时处于上传状态的文件最多为10个）</li><li>上传显示实时上传进度</li><li><strong>上传后图片无需手动点击，可直接展示在管理页面中</strong></li><li><strong>过大图片在前端进行压缩，提升上传稳定性和加载性能</strong></li><li>支持自定义压缩质量，自定义开启前后端压缩功能</li></ul><h2 id="4-多样化复制"><a href="#4-多样化复制" class="headerlink" title="4.多样化复制"></a><strong>4.多样化复制</strong></h2><ul><li>支持<strong>整体复制</strong>和<strong>单独复制</strong>（整体复制即将所有链接通过换行串联起来后复制）</li><li>支持<strong>MarkDown、HTML、BBCode和原始链接</strong>四种格式复制</li><li>上传完成后直观展示四种格式链接</li></ul><h2 id="5-支持身份认证、防滥用"><a href="#5-支持身份认证、防滥用" class="headerlink" title="5.支持身份认证、防滥用"></a><strong>5.支持身份认证、防滥用</strong></h2><ul><li>支持Web和API<strong>上传认证</strong></li><li>支持访问域名限制</li><li>支持上传IP统计</li></ul><h2 id="6-支持页面自定义"><a href="#6-支持页面自定义" class="headerlink" title="6.支持页面自定义"></a><strong>6.支持页面自定义</strong></h2><ul><li>页面背景支持<strong>单图</strong>、<strong>自定义多图轮播</strong>、<strong>bing随机图轮播</strong>等多种模式</li><li>自定义图床名称和Logo</li><li>自定义网站标题和Icon</li></ul><h2 id="7-一些小功能"><a href="#7-一些小功能" class="headerlink" title="7.一些小功能"></a><strong>7.一些小功能</strong></h2><ul><li>支持<strong>随机图</strong>API，从图床中随机返回一张图片</li></ul><h2 id="8-以及原版所有特性"><a href="#8-以及原版所有特性" class="headerlink" title="8.以及原版所有特性"></a><strong>8.以及原版所有特性</strong></h2><blockquote><p>1.无限图片储存数量，你可以上传不限数量的图片</p><p>2.无需购买服务器，托管于 Cloudflare 的网络上，当使用量不超过 Cloudflare 的免费额度时，完全免费</p><p>3.无需购买域名，可以使用 Cloudflare Pages 提供的<code>*.pages.dev</code>的免费二级域名，同时也支持绑定自定义域名</p><p>4.支持<strong>图片审查</strong> API，可根据需要开启，开启后不良图片将自动屏蔽，不再加载</p><p>5.支持<strong>后台图片管理</strong>，可以对上传的图片进行在线预览，添加白名单，黑名单等操作</p></blockquote><h1 id="二，部署"><a href="#二，部署" class="headerlink" title="二，部署"></a>二，<strong>部署</strong></h1><h2 id="1-创建Telegram机器人得到TG-BOT-TOKEN"><a href="#1-创建Telegram机器人得到TG-BOT-TOKEN" class="headerlink" title="1.创建Telegram机器人得到TG_BOT_TOKEN"></a>1.创建Telegram机器人得到<code>TG_BOT_TOKEN</code></h2><ol><li><p>向<a href="https://t.me/BotFather">@BotFather</a>发送<code>/newbot</code>，按照提示输入bot的备注、用户名等信息。成功创建如图所示的红色部分为<code>TG_BOT_TOKEN</code>。</p><p> <img src="https://tu.126330.xyz/file/1729154237023_Screenshot_20241017_155651_edit_574428759597799.jpg" alt="https://tu.126330.xyz/file/1729154237023_Screenshot_20241017_155651_edit_574428759597799.jpg"></p><h2 id="创建Telegram频道得到-TG-CHAT-ID"><a href="#创建Telegram频道得到-TG-CHAT-ID" class="headerlink" title="创建Telegram频道得到**TG_CHAT_ID**"></a>创建Telegram频道得到**<code>TG_CHAT_ID</code>**</h2><p> 创建一个新的频道（Channel），并按下图所示将机器人加入频道</p><p> <img src="https://tu.126330.xyz/file/1729154241321_Screenshot_20241017_160513_edit_574445754749303.jpg" alt="https://tu.126330.xyz/file/1729154241321_Screenshot_20241017_160513_edit_574445754749303.jpg"></p><p> <img src="https://tu.126330.xyz/file/1729154241183_Screenshot_20241017_160520_edit_574457710440653.jpg" alt="https://tu.126330.xyz/file/1729154241183_Screenshot_20241017_160520_edit_574457710440653.jpg"></p></li></ol><h3 id="选择你刚创建的频道，授予机器人管理员权限"><a href="#选择你刚创建的频道，授予机器人管理员权限" class="headerlink" title="选择你刚创建的频道，授予机器人管理员权限"></a>选择你刚创建的频道，授予机器人管理员权限</h3><p><img src="https://tu.126330.xyz/file/1729154244368_Screenshot_20241017_160533_edit_574471031884085.jpg" alt="https://tu.126330.xyz/file/1729154244368_Screenshot_20241017_160533_edit_574471031884085.jpg"></p><h2 id="向-VersaToolsBot转发一条第2步新建频道中的消息，获取TG-CHAT-ID（频道ID）"><a href="#向-VersaToolsBot转发一条第2步新建频道中的消息，获取TG-CHAT-ID（频道ID）" class="headerlink" title="向@VersaToolsBot转发一条第2步新建频道中的消息，获取TG_CHAT_ID（频道ID）"></a>向<a href="https://t.me/VersaToolsBot">@VersaToolsBot</a><strong>转发</strong>一条第2步新建频道中的消息，获取<code>TG_CHAT_ID</code>（频道ID）</h2><aside> ‼️ **频道ID前有个负号不要忘了!!**</aside><p><img src="https://tu.126330.xyz/file/1729154245823_Screenshot_20241017_161503_edit_574486968755694.jpg" alt="https://tu.126330.xyz/file/1729154245823_Screenshot_20241017_161503_edit_574486968755694.jpg"></p><h2 id="部署于Cloudflare"><a href="#部署于Cloudflare" class="headerlink" title="部署于Cloudflare"></a>部署于Cloudflare</h2><p>依托于CF的强大能力，只需简单几步，即可部署本项目，拥有自己的图床。</p><ol><li><a href="https://github.com/MarSeventh/CloudFlare-ImgBed">Fork</a></li></ol><p><img src="https://tu.126330.xyz/file/1729153327657_Clip_2024-10-17_16-21-51.png" alt="https://tu.126330.xyz/file/1729153327657_Clip_2024-10-17_16-21-51.png"></p><ol><li>打开 <a href="https://dash.cloudflare.com/">Cloudflare Dashboard</a>，进入 Pages 管理页面，选择创建项目，选择<code>连接到 Git 提供程序</code></li></ol><p><img src="https://alist.sanyue.site/d/imgbed/202407201047300.png" alt="https://alist.sanyue.site/d/imgbed/202407201047300.png"></p><ol><li><p>按照页面提示输入项目名称，选择需要连接的 git 仓库，点击<code>部署站点</code></p></li><li><p>将前面获取的<code>TG_BOT_TOKEN</code>和<code>TG_CHAT_ID</code>分别添加到环境变量中，对应<strong>环境变量名为<code>TG_BOT_TOKEN</code>和<code>TG_CHAT_ID</code></strong></p></li><li><p><strong>绑定KV数据库</strong>：</p><ul><li><p>创建一个新的KV数据库</p><p>  <img src="https://tu.126330.xyz/file/1729153507708_Clip_2024-10-17_16-24-57.png" alt="https://tu.126330.xyz/file/1729153507708_Clip_2024-10-17_16-24-57.png"></p></li><li><p>进入项目对应<code>设置</code>&gt;<code>函数</code>&gt;<code>KV 命名空间绑定</code>&gt;<code>编辑绑定</code>&gt;<code>变量名称</code>，填写<code>img_url</code>，KV命名空间选择刚才创建好的KV数据库</p></li></ul></li><li><p><code>重试部署</code>，此时项目即可正常使用</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 图床 </tag>
            
            <tag> Telegram </tag>
            
            <tag> CloudflarePages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2024/10/29/11/"/>
      <url>/2024/10/29/11/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a><strong>什么是 Hexo？</strong></h2><p>Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="一，搭建前的软件准备"><a href="#一，搭建前的软件准备" class="headerlink" title="一，搭建前的软件准备"></a>一，搭建前的软件准备</h1><blockquote><p>搭建之前需要准备的软件： Git：官网下载：<a href="https://git-scm.com/">https://git-scm.com/</a><br>Git安装教程:<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a><br>Node.js 官网下载：<a href="http://nodejs.cn/">http://nodejs.cn/</a><br>这篇文章里有修改node.js缓存路径的教学:<a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">https://www.cnblogs.com/liuqiyun/p/8133904.html</a> 如果觉得下载麻烦可以通过网盘下载：<br> 小飞机网盘下载链接：（node-v20.18.0-x64，Git-2.46.2-64-bit） 链接：<a href="https://share.feijipan.com/s/voCrF8tW">https://share.feijipan.com/s/voCrF8tW</a></p></blockquote><p>测试下是否都下载成功</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二，-安装hexo。"><a href="#二，-安装hexo。" class="headerlink" title="二， 安装hexo。"></a>二， 安装hexo。</h1><h1 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo"></a>下载hexo</h1><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="本地生成博客内容"><a href="#本地生成博客内容" class="headerlink" title="本地生成博客内容"></a>本地生成博客内容</h2><ol><li>在喜欢位置新建文件Blog，然后进入文件夹</li><li>右键空白处然后点Git bash here，依次输入</li></ol><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo install</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>如果提示‘command not find’，就在前面加上npx，如：npx hexo init</p></blockquote><p>接着依次输入</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>国内与github连接不稳定，可能无法连接，最好挂个梯子</p></blockquote><p>#搭建GitHub仓库</p><ol><li>注册&#x2F;登入<a href="https://github.com/">Github</a></li><li>点击Create a new repository（创建仓库）进入新建仓库页面</li><li>仓库名输入：</li></ol><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">用户名.github.io</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意：此处必须为你的GitHub用户名</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wanwuzhishi/picx-images-hosting@master/Clip_2024-10-07_22-10-04.7p3l109rpo.png" alt="https://cdn.jsdelivr.net/gh/wanwuzhishi/picx-images-hosting@master/Clip_2024-10-07_22-10-04.7p3l109rpo.png"></p><p>勾选 Public（公共）</p><p>勾选 Add a README file（添加一个README文件）</p><p>拉到下面点击create（创建 ）创建</p><p><img src="https://cdn.jsdelivr.net/gh/wanwuzhishi/picx-images-hosting@master/Clip_2024-10-07_22-11-53.361jy16mei.png" alt="https://cdn.jsdelivr.net/gh/wanwuzhishi/picx-images-hosting@master/Clip_2024-10-07_22-11-53.361jy16mei.png"></p><h1 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH Keys"></a>生成SSH Keys</h1><p>进入任意文件夹，右键空白处然后点Git bash here,输入</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮件地址&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>此处“邮件地址”为你注册GitHub的邮件</p></blockquote><ol><li>敲4次Enter</li><li>进入C:\Users\用户名，在里面进入.ssh文件</li><li>用记事本打开里面的id_rsa.pub,全选复制里面的代码</li><li>然后打开<a href="https://github.com/settings/profile">github</a></li><li>进入用户设置，找到SSH keys</li><li>新建SSH keys，名称随意，在下面粘贴代码，</li><li>点击创建 ##测试是否成功 在git bash中输入</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ssh -T git<span class="meta">@github</span>.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>敲Enter，然后再输入yes</p><h1 id="本地博客部署到GitHub"><a href="#本地博客部署到GitHub" class="headerlink" title="本地博客部署到GitHub"></a>本地博客部署到GitHub</h1><ol><li>进入之前的Blog文件夹，用记事本打开_config.yml</li><li>拉到最下面将deploy后面的全删掉，复制粘贴这段</li></ol><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">type<span class="punctuation">:</span> git</span><br><span class="line">repository<span class="punctuation">:</span></span><br><span class="line">branch<span class="punctuation">:</span> main</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意缩进格式：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删</p></blockquote><ol><li>去github之前生成的仓库页面，点code，复制https链接</li><li>将其粘贴到我们记事本中的repository：后面</li><li>然后保存退出 ##回到博客文件夹，git bash 安装自动部署发布工具</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后在Blog文件夹右键打开git bash，依次输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g（生成）</span><br><span class="line">hexo d（上传）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是第一次使用git的话会需要配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br><span class="line">git config --global user.name &quot;你的名字&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置完后再 <code>hexo d</code> 上传</p><p>在跳出来的窗口内进行登录</p><p><img src="https://cdn.jsdelivr.net/gh/wanwuzhishi/picx-images-hosting@master/Clip_2024-10-07_22-33-18.1025ca6otu.png" alt="https://cdn.jsdelivr.net/gh/wanwuzhishi/picx-images-hosting@master/Clip_2024-10-07_22-33-18.1025ca6otu.png"></p><p>这样就成功把本地内容上传到github了</p><p>上传成功以后，我们就算搭建好了！上自己的网址看看吧</p><p>网址是我们之前设的仓库名：<a href="http://用户名.github.io/">用户名.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统与Linux系统的区别</title>
      <link href="/2024/10/28/06/"/>
      <url>/2024/10/28/06/</url>
      
        <content type="html"><![CDATA[<h2 id="一、设计理念与商业模式"><a href="#一、设计理念与商业模式" class="headerlink" title="一、设计理念与商业模式"></a>一、设计理念与商业模式</h2><ul><li><p><strong>理念</strong>：</p><ul><li><strong>Windows</strong>：注重用户界面的友好性和易用性，旨在为普通用户提供直观、功能丰富的桌面操作系统，满足办公、娱乐等多种需求。</li><li><strong>Linux</strong>：强调开源、自由和高度可定制性，更倾向于技术人员、开发者和专业场景的需求。</li></ul></li><li><p><strong>商业模式</strong>：</p><ul><li><strong>Windows</strong>：微软的商业产品，用户需购买正版授权，虽然存在未授权使用情况。</li><li><strong>Linux</strong>：大多数发行版开源免费，主要通过技术服务和企业定制等周边服务盈利。</li></ul></li></ul><h2 id="二、用户界面"><a href="#二、用户界面" class="headerlink" title="二、用户界面"></a>二、用户界面</h2><ul><li><p><strong>桌面环境</strong>：</p><ul><li><strong>Windows</strong>：统一标准的图形界面（如开始菜单、任务栏），操作简单易上手。</li><li><strong>Linux</strong>：多种桌面环境（如GNOME、KDE），不同发行版的界面风格和操作习惯差异较大，但易用性在不断提升。</li></ul></li><li><p><strong>命令行</strong>：</p><ul><li><strong>Windows</strong>：CMD或PowerShell功能相对较少，主要用于基本操作。</li><li><strong>Linux</strong>：命令行功能强大，许多操作通过命令行完成更高效，是系统管理和开发的重要工具。</li></ul></li></ul><h2 id="三、软件生态"><a href="#三、软件生态" class="headerlink" title="三、软件生态"></a>三、软件生态</h2><ul><li><p><strong>通用软件</strong>：</p><ul><li><strong>Windows</strong>：拥有庞大的软件生态，几乎所有主流商业软件和行业软件都有Windows版本。</li><li><strong>Linux</strong>：软件生态在发展中，但在某些专业软件（尤其是闭源商业软件）支持上不如Windows。</li></ul></li><li><p><strong>开源软件</strong>：</p><ul><li><strong>Windows</strong>：有开源软件，但不是主流。</li><li><strong>Linux</strong>：开源软件是其重要组成部分，许多开源项目首先支持Linux。</li></ul></li></ul><h2 id="四、安全性"><a href="#四、安全性" class="headerlink" title="四、安全性"></a>四、安全性</h2><ul><li><p><strong>更新机制</strong>：</p><ul><li><strong>Windows</strong>：统一更新机制，强制更新可能困扰用户，但有助于安全性提升。</li><li><strong>Linux</strong>：不同发行版有灵活的更新策略。</li></ul></li><li><p><strong>安全特性</strong>：</p><ul><li><strong>Windows</strong>：有防火墙和安全中心等防护体系。</li><li><strong>Linux</strong>：权限管理严格，普通用户权限较小；开源特性使漏洞更快被发现和修复，服务器安全性表现突出。</li></ul></li></ul><h2 id="五、系统稳定性"><a href="#五、系统稳定性" class="headerlink" title="五、系统稳定性"></a>五、系统稳定性</h2><ul><li><p><strong>系统核心</strong>：</p><ul><li><strong>Windows</strong>：在复杂软硬件环境下偶尔会崩溃或蓝屏。</li><li><strong>Linux</strong>：内核稳定高效，适合长时间高负荷运行（如服务器）。</li></ul></li><li><p><strong>驱动兼容性</strong>：</p><ul><li><strong>Windows</strong>：对新硬件驱动支持较好，但可能因驱动问题导致不稳定。</li><li><strong>Linux</strong>：驱动支持较复杂，但主流硬件基本兼容。</li></ul></li></ul><h2 id="六、系统架构与内核"><a href="#六、系统架构与内核" class="headerlink" title="六、系统架构与内核"></a>六、系统架构与内核</h2><ul><li><p><strong>内核</strong>：</p><ul><li><strong>Windows</strong>：闭源内核。</li><li><strong>Linux</strong>：开源内核，遵循POSIX标准，Unix应用易于移植。</li></ul></li><li><p><strong>系统架构</strong>：</p><ul><li><strong>Windows</strong>：主要针对个人电脑、笔记本和服务器设计。</li><li><strong>Linux</strong>：除了常见计算机设备，还广泛应用于嵌入式设备（如路由器、智能电视等）。</li></ul></li></ul><h2 id="七、文件系统"><a href="#七、文件系统" class="headerlink" title="七、文件系统"></a>七、文件系统</h2><ul><li><strong>Windows</strong>：常用NTFS等文件系统，路径使用反斜杠“\”。</li><li><strong>Linux</strong>：常用ext4等文件系统，路径使用正斜杠“&#x2F;”。</li></ul><h2 id="八、多用户特性"><a href="#八、多用户特性" class="headerlink" title="八、多用户特性"></a>八、多用户特性</h2><ul><li><strong>Windows</strong>：多用户功能主要体现在不同用户有各自配置，服务器版本多用户管理更强大。</li><li><strong>Linux</strong>：天然适合多用户同时登录和使用系统资源，严格的权限管理和资源配额。</li></ul><h2 id="九、应用场景"><a href="#九、应用场景" class="headerlink" title="九、应用场景"></a>九、应用场景</h2><ul><li><strong>Windows</strong>：广泛用于个人电脑、办公环境和家庭娱乐。</li><li><strong>Linux</strong>：在服务器领域（如Web服务器、数据库服务器）占据主导地位，开发领域深受开发者喜爱，嵌入式领域也广泛应用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用GitHub开源项目建立个人网址导航站</title>
      <link href="/2024/10/28/09/"/>
      <url>/2024/10/28/09/</url>
      
        <content type="html"><![CDATA[<h1 id="项目地址-https-github-com-Pintree-io-pintree"><a href="#项目地址-https-github-com-Pintree-io-pintree" class="headerlink" title="项目地址 https://github.com/Pintree-io/pintree"></a>项目地址 <a href="https://github.com/Pintree-io/pintree">https://github.com/Pintree-io/pintree</a></h1><h1 id="下方文本全盘照搬项目原文，推荐去看原文"><a href="#下方文本全盘照搬项目原文，推荐去看原文" class="headerlink" title="下方文本全盘照搬项目原文，推荐去看原文"></a>下方文本全盘照搬项目原文，推荐去看原文</h1><h1 id="Pintree"><a href="#Pintree" class="headerlink" title="Pintree"></a>Pintree</h1><p>Pintree 是一个开源项目，旨在将浏览器书签导出成导航网站。通过简单的几步操作，就可以将书签转换成一个美观且易用的导航页面。</p><p><img src="https://tu.126330.xyz/file/1729088850082_Clip_2024-10-16_22-27-15.png"></p><h2 id="项目功能和目标"><a href="#项目功能和目标" class="headerlink" title="项目功能和目标"></a>项目功能和目标</h2><ul><li>导出浏览器书签</li><li>将书签文件转换成JSON格式</li><li>生成静态导航网站</li></ul><h2 id="安装和运行"><a href="#安装和运行" class="headerlink" title="安装和运行"></a>安装和运行</h2><h3 id="步骤-1：下载浏览器书签"><a href="#步骤-1：下载浏览器书签" class="headerlink" title="步骤 1：下载浏览器书签"></a>步骤 1：下载浏览器书签</h3><ol><li>安装 <a href="https://microsoftedge.microsoft.com/addons/detail/pintree-bookmarks-exporte/binmofchlenaimbnocogbpebiodjlgkm">Pintree Bookmarks Exporter</a> 插件。</li><li>使用插件导出浏览器书签，并保存 JSON 文件到本地。</li></ol><p><img src="https://tu.126330.xyz/file/1729088930803_Clip_2024-10-16_22-28-39.png"></p><h3 id="步骤-2：Fork-项目"><a href="#步骤-2：Fork-项目" class="headerlink" title="步骤 2：Fork 项目"></a>步骤 2：Fork 项目</h3><ol><li>访问 <a href="https://github.com/Pintree-io/pintree">Pintree GitHub 仓库</a>。</li><li>点击页面右上角的 <code>Fork</code> 按钮，将项目 Fork 到您的 GitHub 账号中。</li></ol><p><img src="https://tu.126330.xyz/file/1729089095760_step2.png"></p><h3 id="步骤-3：替换-JSON-文件"><a href="#步骤-3：替换-JSON-文件" class="headerlink" title="步骤 3：替换 JSON 文件"></a>步骤 3：替换 JSON 文件</h3><ol><li>打开您 GitHub 账号中的 <code>pintree</code> 仓库（即刚才 Fork 的项目）。</li><li>点击仓库中的 <code>json</code> 文件夹。</li><li>点击 <code>Upload files</code> 按钮，选择刚才下载的 JSON 文件，并上传。</li><li>确保上传的文件命名为 <code>pintree.json</code>，并选择 <code>Commit changes</code>。</li></ol><p><img src="https://tu.126330.xyz/file/1729089110492_step3.png"></p><h3 id="步骤-4：启用-GitHub-Pages"><a href="#步骤-4：启用-GitHub-Pages" class="headerlink" title="步骤 4：启用 GitHub Pages"></a>步骤 4：启用 GitHub Pages</h3><ol><li>在您的 <code>pintree</code> 仓库页面，点击 <code>Settings</code>。</li><li>找到 <code>Pages</code> 选项。</li><li>在 <code>Source</code> 下拉菜单中，选择 <code>gh-pages</code> 分支，然后点击 <code>Save</code>。</li><li>几分钟后，您的静态网站将会在 <code>https://yourusername.github.io/pintree</code> 上可用。记得替换 <code>yourusername</code>。</li></ol><p><img src="https://tu.126330.xyz/file/1729089110692_step4.png"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
